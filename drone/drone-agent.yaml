apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    app: drone
    chart: drone-1.4.0
    component: agent
    heritage: Tiller
    release: drone
  name: drone-drone-agent
  selfLink: /apis/extensions/v1beta1/namespaces/drone/deployments/drone-drone-agent
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: drone
      component: agent
      release: drone
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/secrets: 8901a45b9a0909c5ee61052f9c00b6ceb7bfa4181469b572967dd82e86c4d69b
      creationTimestamp: null
      labels:
        app: drone
        component: agent
        release: drone
    spec:
      containers:
      - env:
        - name: DRONE_SERVER
          value: drone-drone:9000
        - name: DRONE_SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: drone-drone
        - name: DOCKER_HOST
          value: tcp://localhost:2375
        - name: DRONE_DEBUG
          value: "false"
        image: docker.io/drone/agent:0.8.5
        imagePullPolicy: IfNotPresent
        name: drone-drone-agent
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - env:
        - name: DOCKER_DRIVER
          value: overlay2
        image: docker.io/library/docker:17.12.0-ce-dind
        imagePullPolicy: IfNotPresent
        name: drone-drone-dind
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/docker
          name: docker-graph-storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: drone-drone
      serviceAccountName: drone-drone
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: docker-graph-storage
status: {}
